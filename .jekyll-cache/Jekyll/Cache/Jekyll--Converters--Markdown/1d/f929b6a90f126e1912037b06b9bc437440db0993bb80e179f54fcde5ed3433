I"3<p>I just released <a href="http://pypi.python.org/pypi/django-statsd-mozilla">django-statsd 0.3.6.1</a>. I've been doing lots of incremental pushes of <a href="https://github.com/andymckay/django-statsd">django-statsd</a> over the last few months. In the last versions I added the following...</p>
<p>A log client that will just log to a python logging handler. This is quicker and easier to set up than the toolbar which is still fraught with pitfalls. A quick example would be setting this:</p>
<pre>
STATSD_CLIENT = 'django_statsd.clients.log'
LOGGING = {
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
        },
    },
    'loggers': {
        'statsd': {
            'handlers': ['console'],
        },
    },
}
</pre>
<p>... and you'll get the statsd pings in your console. Useful for development.</p>
<p>I've been collecting navigation timing on Mozilla sites for a while, but they haven't been supeer useful. In an attempt to copy what <a href="http://blog.newrelic.com/2012/05/16/its-all-in-the-timing-how-to-use-the-navigation-timing-specification-to-improve-web-performance/">New Relic</a> do, I started parsing the timing data in a similar manner. Giving some new statistics from navigation timing: network, app, dom and rendering. Although I think I still need to refine those.</p>
<p>Finally, if you can get Django debug toolbar and django-statsd working together, you should now be rewarded with a nice waterfall view of the timings, for example:</p>
<p><img src="/files/django-stats-waterfall.png" /></p>
<p>That's it for now.</p>
:ET