I"¡<p>One area the <a href="https://developer.mozilla.org/en-US/apps">App initiative</a> from Mozilla is focusing on is games. It's not our only focus, but it's an easy one because games are fun and push lots of interesting boundaries, they require Mozilla to think about and fix issues that games developers have.</p>
<p>Another are I'm interested in is business apps. Yeah I know they are <a href="http://www.jwz.org/doc/groupware.html">terribly boring</a> and not as sexy as games, but someone has to write them. And they do get written in their shed loads by underpaid, overworked developers in consulting companies or IT departments all over the world. This is the area where Microsoft, IBM, Oracle, Java and all that sort of stuff lives.</p>
<p>It's a big industry and a "business app" can mean almost anything, but I find some of it's challenges quite interesting. Things like:</p>
<ul><li>data validation libraries</li>
<li>generation of nice reports in multiple formats</li>
<li>producing <a href="http://d3js.org/">nice graphs</a> of things</li>
<li>background processing tasks</li>
<li>integrating with other apps and systems</li>
<li>good text areas that aren't just tools for writing code</li>
<li>security and user access</li>
</ul>
<p>I'm just making that list up. I'm not really sure what people want, but I think there are some interesting and well known patterns that we can start to define and give examples on.</p>
<p>If we step back from closed source for moment, I get the impression there are still lots of developers using things like Tk, wxWindows and I'd like to know why.</p>
<p>I can imagine being able to program in any language (and not just JS) and being able to bundle just about anything in your app as big wins (maintaining your own installers and all those dependencies isn't much fun though). But for lots of apps, neither of those are necessary and people could just be writing Web Apps.</p>
<p>So how can we help?</p>
:ET